import pandas as pd

# ======================
# 1. ƒê·ªçc file d·ªØ li·ªáu
# ======================
df = pd.read_csv("FinalProject/Medicine_Details.csv")

# ======================
# 2. H√†m chu·∫©n h√≥a & ph√¢n lo·∫°i
# ======================
def clean_text(text):
    if pd.isna(text):
        return ""
    return str(text).lower()

def classify_medicine(row):
    uses = clean_text(row["Uses"])
    comp = clean_text(row["Composition"])
    
    # Kh√°ng sinh
    if any(kw in uses for kw in ["bacterial infection", "antibiotic"]) or \
       any(kw in comp for kw in ["cillin", "cycline", "mycin", "floxacin"]):
        return "Kh√°ng sinh"
    
    # Gi·∫£m ƒëau - H·∫° s·ªët - Kh√°ng vi√™m
    if any(kw in uses for kw in ["pain", "fever", "inflammation"]) or \
       any(kw in comp for kw in ["paracetamol", "ibuprofen", "diclofenac"]):
        return "Gi·∫£m ƒëau - H·∫° s·ªët - Kh√°ng vi√™m"
    
    # Tim m·∫°ch - Huy·∫øt √°p
    if any(kw in uses for kw in ["hypertension", "heart", "angina", "stroke"]) or \
       any(kw in comp for kw in ["olol", "pril", "sartan", "statin"]):
        return "Tim m·∫°ch - Huy·∫øt √°p"
    
    # Ung th∆∞
    if any(kw in uses for kw in ["cancer", "tumor", "oncology"]) or \
       any(kw in comp for kw in ["mab", "tinib", "platin"]):
        return "Ung th∆∞"
    
    # Ti√™u h√≥a - Gan m·∫≠t
    if any(kw in uses for kw in ["acid reflux", "ulcer", "liver", "stomach", "digestive"]) or \
       any(kw in comp for kw in ["omeprazole", "ranitidine", "pantoprazole"]):
        return "Ti√™u h√≥a - Gan m·∫≠t"
    
    # H√¥ h·∫•p - C·∫£m c√∫m
    if any(kw in uses for kw in ["cough", "asthma", "bronchitis", "flu", "cold", "respiratory"]) or \
       any(kw in comp for kw in ["salbutamol", "ambroxol", "guaifenesin"]):
        return "H√¥ h·∫•p - C·∫£m c√∫m"
    
    # Vitamin & Kho√°ng ch·∫•t
    if any(kw in uses for kw in ["vitamin", "supplement", "deficiency"]) or \
       any(kw in comp for kw in ["vitamin", "folic", "zinc", "calcium", "iron"]):
        return "Vitamin & Kho√°ng ch·∫•t"
    
    return "Kh√°c"

# ======================
# 3. √Åp d·ª•ng ph√¢n lo·∫°i
# ======================
df["Category"] = df.apply(classify_medicine, axis=1)

# ======================
# 4. Th·ªëng k√™ nhanh
# ======================
print("üìä Th·ªëng k√™ theo nh√≥m thu·ªëc:")
print(df["Category"].value_counts())

# ======================
# 5. Xu·∫•t d·ªØ li·ªáu
# ======================
df.to_csv("Medicine_Classified.csv", index=False, encoding="utf-8-sig")
df.to_json("Medicine_Classified.json", orient="records", force_ascii=False, indent=2)

print("üéâ ƒê√£ xu·∫•t Medicine_Classified.csv v√† Medicine_Classified.json")
